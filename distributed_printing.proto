syntax = "proto3";

package distributed_printing;

// Serviço do servidor burro de impressão
service PrintingService {
  rpc SendToPrinter (PrintRequest) returns (PrintResponse);
}

// Serviço para comunicação entre clientes (Mutual Exclusion)
service MutualExclusionService {
  rpc RequestAccess (AccessRequest) returns (AccessResponse);
  rpc SendReply (ReplyMessage) returns (EmptyResponse);
  rpc ReleaseAccess (AccessRelease) returns (EmptyResponse);
}

// ------------------- Mensagens -------------------

// CLIENTE -> SERVIDOR BURRO
message PrintRequest {
  int32 client_id = 1;
  string message_content = 2;
  int64 lamport_timestamp = 3;
  int32 request_number = 4;
}

message PrintResponse {
  bool success = 1;
  string confirmation_message = 2;
  int64 lamport_timestamp = 3;
}

// CLIENTE <-> CLIENTE
message AccessRequest {
  int32 client_id = 1;
  int64 lamport_timestamp = 2;
  int32 request_number = 3;
}

message AccessResponse {
  bool ack = 1; // verdadeiro sempre que resposta foi entregue (para simplificar)
  int64 lamport_timestamp = 2;
}

message AccessRelease {
  int32 client_id = 1;
  int64 lamport_timestamp = 2;
  int32 request_number = 3;
}

// Mensagem de resposta adiada (enviada por SendReply)
message ReplyMessage {
  int32 from_client_id = 1;
  int64 lamport_timestamp = 2;
}

// Mensagem vazia
message EmptyResponse {}
